https://leetcode.com/problems/valid-parentheses/description/?envType=study-plan-v2&envId=top-interview-150
==============================================================================================================

class Solution {
    public boolean isValid(String s) {
        if(s.length()%2!=0){
            return false;
        }
        Stack<Character> stack= new Stack();
        for(char c : s.toCharArray()){
            if(c=='(' || c=='{' || c=='['){
                System.out.println("Pushing "+ c);
                stack.push(c);
            }
            else if(c==')' && !stack.isEmpty() && stack.peek()=='('){
                System.out.println("Popping )");
                stack.pop();
            }
            else if(c=='}' && !stack.isEmpty() && stack.peek()=='{'){
                System.out.println("Popping }");
                stack.pop();
            }
            else if(c==']' && !stack.isEmpty() && stack.peek()=='['){
                System.out.println("Popping ]");
                stack.pop();
            }
            else{
                return false;
            }
        }
           return stack.isEmpty();
    }
}

=======================================================================================================
import java.util.Stack;
class HelloWorld {
    public static void main(String[] args) {
        String s="{[]}";
        Stack<Character> stack= new Stack();
        for(char c: s.toCharArray()){
            if(c=='{'||c=='['||c=='('){
                stack.push(c);
            }
            else if(c=='}' && !stack.isEmpty() && stack.peek()=='{'){
                stack.pop();
            }
            else if(c==')' && !stack.isEmpty() && stack.peek()=='('){
                stack.pop();
            }
            else if(c==']' && !stack.isEmpty() && stack.peek()=='['){
                stack.pop();
            }
            else{
                // return false;
                System.out.println("false");
            }
        }
        // return stack.isEmpty();
        System.out.println(stack.isEmpty());
    }
}

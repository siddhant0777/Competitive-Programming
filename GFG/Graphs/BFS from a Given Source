https://www.geeksforgeeks.org/breadth-first-search-or-bfs-for-a-graph/
========================================================================

import java.util.*

class Bfs{

  public static void main(String[] args){
    int V=5;
    List<List<Integer>> adj = new ArrayList<>(V);
     for(int i=0;i<V;i++){
     adj.add(new ArrayList<>());
    }

    addEdge(adj,0,1);
    addEdge(adj,0,2);
    addEdge(adj,1,3);
    addEdge(adj,1,4);
    addEdge(adj,2,4);

    System.out.println("BFS starting from 0");
    bfs(adj,0);
  }

  public static addEdge(int[] adj, int u, int v){
    adj.get(u).add(v);
    adj.get(v).add(u);
  }

  public static bfs(List<List<Integer>>, int s){
   Queue<Integer> q= new LinkedList<>();
   boolean[] visited = new boolean[adj.size()];

   visited[s]=true;
   q.add(s);

   while(!q.isEmpty()){
     int curr= q.poll();
     System.out.print(curr);
     for(int x:adj.get(curr)){
      if(!visited[x]){
       visited[x]=true;
       q.add(x);
      }
     }
   }  
  }

}
